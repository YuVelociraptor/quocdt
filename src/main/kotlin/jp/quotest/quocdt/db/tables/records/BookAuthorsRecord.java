/*
 * This file is generated by jOOQ.
 */
package jp.quotest.quocdt.db.tables.records;


import jp.quotest.quocdt.db.tables.BookAuthors;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookAuthorsRecord extends UpdatableRecordImpl<BookAuthorsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.book_authors.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.book_authors.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.book_authors.book_id</code>.
     */
    public void setBookId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.book_authors.book_id</code>.
     */
    public Integer getBookId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.book_authors.author_id</code>.
     */
    public void setAuthorId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.book_authors.author_id</code>.
     */
    public Integer getAuthorId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookAuthorsRecord
     */
    public BookAuthorsRecord() {
        super(BookAuthors.BOOK_AUTHORS);
    }

    /**
     * Create a detached, initialised BookAuthorsRecord
     */
    public BookAuthorsRecord(Integer id, Integer bookId, Integer authorId) {
        super(BookAuthors.BOOK_AUTHORS);

        setId(id);
        setBookId(bookId);
        setAuthorId(authorId);
        resetChangedOnNotNull();
    }
}
